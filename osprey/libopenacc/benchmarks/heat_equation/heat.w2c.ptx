	.version 1.4
	.target sm_10, map_f64_to_f32
	// compiled with /opt/cuda/5.0/open64/lib//be
	// nvopencc 4.1 built on 2012-09-21

	//-----------------------------------------------------------
	// Compiling /tmp/tmpxft_00003a46_00000000-9_heat.w2c.cpp3.i (/tmp/ccBI#.bDls14)
	//-----------------------------------------------------------

	//-----------------------------------------------------------
	// Options:
	//-----------------------------------------------------------
	//  Target:ptx, ISA:sm_10, Endian:little, Pointer Size:64
	//  -O3	(Optimization level)
	//  -g0	(Debug level)
	//  -m2	(Report advisories)
	//-----------------------------------------------------------

	.file	1	"<command-line>"
	.file	2	"/tmp/tmpxft_00003a46_00000000-8_heat.w2c.cudafe2.gpu"
	.file	3	"/opt/local/gcc/4.4.7/lib/gcc/x86_64-unknown-linux-gnu/4.4.7/include/stddef.h"
	.file	4	"/opt/cuda/5.0/bin/../include/crt/device_runtime.h"
	.file	5	"/opt/cuda/5.0/bin/../include/host_defines.h"
	.file	6	"/opt/cuda/5.0/bin/../include/builtin_types.h"
	.file	7	"/opt/cuda/5.0/bin/../include/device_types.h"
	.file	8	"/opt/cuda/5.0/bin/../include/driver_types.h"
	.file	9	"/opt/cuda/5.0/bin/../include/surface_types.h"
	.file	10	"/opt/cuda/5.0/bin/../include/texture_types.h"
	.file	11	"/opt/cuda/5.0/bin/../include/vector_types.h"
	.file	12	"/opt/cuda/5.0/bin/../include/device_launch_parameters.h"
	.file	13	"/opt/cuda/5.0/bin/../include/crt/storage_class.h"
	.file	14	"heat.w2c.cu"
	.file	15	"/opt/cuda/5.0/bin/../include/common_functions.h"
	.file	16	"/opt/cuda/5.0/bin/../include/math_functions.h"
	.file	17	"/opt/cuda/5.0/bin/../include/math_constants.h"
	.file	18	"/opt/cuda/5.0/bin/../include/device_functions.h"
	.file	19	"/opt/cuda/5.0/bin/../include/sm_11_atomic_functions.h"
	.file	20	"/opt/cuda/5.0/bin/../include/sm_12_atomic_functions.h"
	.file	21	"/opt/cuda/5.0/bin/../include/sm_13_double_functions.h"
	.file	22	"/opt/cuda/5.0/bin/../include/sm_20_atomic_functions.h"
	.file	23	"/opt/cuda/5.0/bin/../include/sm_35_atomic_functions.h"
	.file	24	"/opt/cuda/5.0/bin/../include/sm_20_intrinsics.h"
	.file	25	"/opt/cuda/5.0/bin/../include/sm_30_intrinsics.h"
	.file	26	"/opt/cuda/5.0/bin/../include/sm_35_intrinsics.h"
	.file	27	"/opt/cuda/5.0/bin/../include/surface_functions.h"
	.file	28	"/opt/cuda/5.0/bin/../include/texture_fetch_functions.h"
	.file	29	"/opt/cuda/5.0/bin/../include/texture_indirect_functions.h"
	.file	30	"/opt/cuda/5.0/bin/../include/surface_indirect_functions.h"
	.file	31	"/opt/cuda/5.0/bin/../include/math_functions_dbl_ptx1.h"


	.entry __accrg_step_kernel_cpu_1_1 (
		.param .u64 __cudaparm___accrg_step_kernel_cpu_1_1_temp_in,
		.param .u64 __cudaparm___accrg_step_kernel_cpu_1_1_temp_out,
		.param .s32 __cudaparm___accrg_step_kernel_cpu_1_1_ni,
		.param .s32 __cudaparm___accrg_step_kernel_cpu_1_1_nj,
		.param .f64 __cudaparm___accrg_step_kernel_cpu_1_1_tfac)
	{
	.reg .u16 %rh<8>;
	.reg .u32 %r<26>;
	.reg .u64 %rd<14>;
	.reg .f64 %fd<16>;
	.reg .pred %p<10>;
	.loc	14	19	0
$LDWbegin___accrg_step_kernel_cpu_1_1:
	.loc	14	37	0
	mov.u16 	%rh1, %ntid.y;
	mov.u16 	%rh2, %ctaid.y;
	mul.wide.u16 	%r1, %rh2, %rh1;
	cvt.u32.u16 	%r2, %tid.y;
	add.u32 	%r3, %r2, %r1;
	mov.s32 	%r4, %r3;
	ld.param.s32 	%r5, [__cudaparm___accrg_step_kernel_cpu_1_1_nj];
	setp.le.s32 	%p1, %r5, %r3;
	@%p1 bra 	$Lt_0_4866;
	mov.u16 	%rh3, %ntid.x;
	mov.u16 	%rh4, %nctaid.x;
	mul.wide.u16 	%r6, %rh4, %rh3;
	mov.u16 	%rh5, %ctaid.x;
	mul.wide.u16 	%r7, %rh5, %rh3;
	mov.u16 	%rh6, %nctaid.y;
	mul.wide.u16 	%r8, %rh6, %rh1;
	cvt.u32.u16 	%r9, %tid.x;
	add.u32 	%r10, %r9, %r7;
	ld.param.s32 	%r11, [__cudaparm___accrg_step_kernel_cpu_1_1_ni];
	setp.gt.s32 	%p2, %r11, %r10;
$Lt_0_5378:
 //<loop> Loop body line 37, nesting depth: 1, estimated iterations: unknown
	.loc	14	41	0
	mov.s32 	%r12, %r10;
	@!%p2 bra 	$Lt_0_5634;
$Lt_0_6146:
 //<loop> Loop body line 41, nesting depth: 2, estimated iterations: unknown
	.loc	14	44	0
	mov.u32 	%r13, 0;
	setp.le.s32 	%p3, %r12, %r13;
	@%p3 bra 	$Lt_0_7938;
	.loc	14	37	0
	ld.param.s32 	%r11, [__cudaparm___accrg_step_kernel_cpu_1_1_ni];
	.loc	14	44	0
	sub.s32 	%r14, %r11, 1;
	setp.ge.s32 	%p4, %r12, %r14;
	@%p4 bra 	$Lt_0_7938;
	mov.u32 	%r15, 0;
	setp.le.s32 	%p5, %r4, %r15;
	@%p5 bra 	$Lt_0_7938;
	.loc	14	37	0
	ld.param.s32 	%r5, [__cudaparm___accrg_step_kernel_cpu_1_1_nj];
	.loc	14	44	0
	sub.s32 	%r16, %r5, 1;
	setp.ge.s32 	%p6, %r4, %r16;
	@%p6 bra 	$Lt_0_7938;
	.loc	14	37	0
	ld.param.s32 	%r11, [__cudaparm___accrg_step_kernel_cpu_1_1_ni];
	.loc	14	53	0
	mul.lo.s32 	%r17, %r4, %r11;
	add.s32 	%r18, %r17, %r12;
	cvt.u64.u32 	%rd1, %r18;
	mul.wide.u32 	%rd2, %r18, 8;
	ld.param.u64 	%rd3, [__cudaparm___accrg_step_kernel_cpu_1_1_temp_in];
	add.u64 	%rd4, %rd2, %rd3;
	ld.global.f64 	%fd1, [%rd4+0];
	ld.param.f64 	%fd2, [__cudaparm___accrg_step_kernel_cpu_1_1_tfac];
	add.s32 	%r19, %r4, 1;
	mul.lo.s32 	%r20, %r11, %r19;
	add.s32 	%r21, %r12, %r20;
	cvt.u64.u32 	%rd5, %r21;
	mul.wide.u32 	%rd6, %r21, 8;
	add.u64 	%rd7, %rd3, %rd6;
	ld.global.f64 	%fd3, [%rd7+0];
	sub.s32 	%r22, %r4, 1;
	mul.lo.s32 	%r23, %r11, %r22;
	add.s32 	%r24, %r12, %r23;
	cvt.u64.u32 	%rd8, %r24;
	mul.wide.u32 	%rd9, %r24, 8;
	add.u64 	%rd10, %rd3, %rd9;
	ld.global.f64 	%fd4, [%rd10+0];
	mov.f64 	%fd5, 0dc000000000000000;	// -2
	mad.rn.f64 	%fd6, %fd1, %fd5, %fd4;
	add.f64 	%fd7, %fd3, %fd6;
	ld.global.f64 	%fd8, [%rd4+8];
	ld.global.f64 	%fd9, [%rd4+-8];
	mov.f64 	%fd10, 0dc000000000000000;	// -2
	mad.rn.f64 	%fd11, %fd1, %fd10, %fd9;
	add.f64 	%fd12, %fd8, %fd11;
	add.f64 	%fd13, %fd7, %fd12;
	mad.rn.f64 	%fd14, %fd2, %fd13, %fd1;
	ld.param.u64 	%rd11, [__cudaparm___accrg_step_kernel_cpu_1_1_temp_out];
	add.u64 	%rd12, %rd11, %rd2;
	st.global.f64 	[%rd12+0], %fd14;
$Lt_0_7938:
$L_0_3842:
	add.s32 	%r12, %r12, %r6;
	.loc	14	37	0
	ld.param.s32 	%r11, [__cudaparm___accrg_step_kernel_cpu_1_1_ni];
	.loc	14	53	0
	setp.lt.s32 	%p7, %r12, %r11;
	@%p7 bra 	$Lt_0_6146;
$Lt_0_5634:
	add.s32 	%r4, %r4, %r8;
	.loc	14	37	0
	ld.param.s32 	%r5, [__cudaparm___accrg_step_kernel_cpu_1_1_nj];
	.loc	14	53	0
	setp.lt.s32 	%p8, %r4, %r5;
	@%p8 bra 	$Lt_0_5378;
$Lt_0_4866:
	.loc	14	60	0
	exit;
$LDWend___accrg_step_kernel_cpu_1_1:
	} // __accrg_step_kernel_cpu_1_1

